<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EnumIntegralTypeNotInteger" xml:space="preserve">
    <value>The enumeration type's underlying integral numeric type is not an integer.</value>
  </data>
  <data name="JsonNotStartObject" xml:space="preserve">
    <value>The provided JSON text does not begin with the start of a JSON object.</value>
  </data>
  <data name="JsonMalformedText" xml:space="preserve">
    <value>The provided JSON text is malformed. A collection of one or more key-value pairs is expected for an object.</value>
  </data>
  <data name="JsonInvalidTypeName" xml:space="preserve">
    <value>The '{0}' property found on the provided JSON object is not the expected type descriptor property '{1}'.</value>
  </data>
  <data name="JsonTypeValueNotNumber" xml:space="preserve">
    <value>The provided JSON object's type descriptor property is not a number.</value>
  </data>
  <data name="JsonDataValueNotObject" xml:space="preserve">
    <value>The provided JSON object's data property is not a JSON object.</value>
  </data>
  <data name="ArgumentStringEmpty" xml:space="preserve">
    <value>The provided string cannot be empty.</value>
  </data>
  <data name="ArgumentExportValueNoObject" xml:space="preserve">
    <value>Cannot retrieve a value from an export that isn't representing an object.</value>
  </data>
  <data name="LoggingMissingMessage" xml:space="preserve">
    <value>Missing message payload.</value>
  </data>
  <data name="LoggingMissingException" xml:space="preserve">
    <value>Missing exception payload.</value>
  </data>
  <data name="EnumerationNotStarted" xml:space="preserve">
    <value>Enumeration has not started. A call to MoveNext() must occur at least once prior to reading the Current object.</value>
  </data>
  <data name="EnumerationAtEnd" xml:space="preserve">
    <value>Enumeration has already finished; no more objects exist in the sequence.</value>
  </data>
  <data name="BadINotifyPropertyChangedImplementation" xml:space="preserve">
    <value>'{0}' is not a valid INotifyPropertyChanged implementation; event data is missing property name information.</value>
  </data>
  <data name="NoExceptionFromSuccessfulResult" xml:space="preserve">
    <value>No comparable exception class can be mapped to the provided HRESULT as it does not represent a failed operation.</value>
  </data>
  <data name="DisplayGetDpiForMonitorFailed" xml:space="preserve">
    <value>HRESULT of {0} returned when attempting to query for a monitor's DPI. Because of this, display device will default to using the system-wide DPI.</value>
  </data>
  <data name="DisplayGetScaleFactorForMonitorFailed" xml:space="preserve">
    <value>HRESULT of {0} returned when attempting to query for a monitor's scale factor. Because of this, display device will default to using a default scale factor of 100 percent.</value>
  </data>
  <data name="DisplayEnumDisplayMonitorsFailed" xml:space="preserve">
    <value>EnumDisplayMonitors failed unexpectedly.</value>
  </data>
  <data name="WeakListEnumeratorNoReference" xml:space="preserve">
    <value>Weak list enumerator requires a strong reference to enumerate.</value>
  </data>
  <data name="WindowHotKeyDuplicateId" xml:space="preserve">
    <value>A hot key has already been registered with the identifier '{0}'.</value>
  </data>
  <data name="ThreadExecutorSourceNotInitialized" xml:space="preserve">
    <value>ThreadExecutorOperationTaskSource has not been initialized.</value>
  </data>
  <data name="ThreadExecutorSourceAlreadyInitialized" xml:space="preserve">
    <value>Cannot load an operation into an already initialized ThreadExecutorOperationTaskSource.</value>
  </data>
  <data name="ExecutorWaitOperationSameThread" xml:space="preserve">
    <value>Executor may not wait on an operation executing on the same thread.</value>
  </data>
  <data name="ExecutorFinalizedBeforeDone" xml:space="preserve">
    <value>Executor operation must either be complete or canceled prior to finalizing completion.</value>
  </data>
  <data name="SubclassDetachedWndProc" xml:space="preserve">
    <value>Subclass message processing procedure invoked while in a detached state.</value>
  </data>
  <data name="SubclassForcibleDetachmentFailed" xml:space="preserve">
    <value>Unable to forcibly detach a subclassed window's WndProc from the window's message chain.</value>
  </data>
  <data name="SubclassDetachmentFailed" xml:space="preserve">
    <value>Unable to detach a subclassed window's WndProc from the window's message chain.</value>
  </data>
  <data name="ExecutorCannotDisableOnOtherThread" xml:space="preserve">
    <value>An executor can only be disabled on the thread which the executor was created on.</value>
  </data>
  <data name="ExecutorCannotEnableOnOtherThread" xml:space="preserve">
    <value>An executor can only be re-enabled on the thread which the executor was created on.</value>
  </data>
  <data name="ExecutorShutdown" xml:space="preserve">
    <value>The executor has been shutdown and cannot execute any further operations.</value>
  </data>
  <data name="ExecutorProcessingDisabled" xml:space="preserve">
    <value>The executor's ability to process operations is currently disabled.</value>
  </data>
  <data name="ExecutorAlreadyRunning" xml:space="preserve">
    <value>The executor is already running on a thread.</value>
  </data>
  <data name="ExecutorIsDisposed" xml:space="preserve">
    <value>Executor is disposed and cannot be run again.</value>
  </data>
  <data name="IconNoEntries" xml:space="preserve">
    <value>The icon file has no image entries.</value>
  </data>
  <data name="IconTooSmallForEntries" xml:space="preserve">
    <value>The size of the icon file isn't large enough to describe the number of images it says it contains.</value>
  </data>
  <data name="IconImageOffsetOverflow" xml:space="preserve">
    <value>Calculating the ending offset for the best-fitting image described by the icon file resulted in an overflow.</value>
  </data>
  <data name="IconImageExceedsFile" xml:space="preserve">
    <value>The best-fitting image's specified amount of data exceeds the total length of the icon file.</value>
  </data>
  <data name="IconImageTooLarge" xml:space="preserve">
    <value>The best-fitting image described by the icon file is too large for realignment and loading.</value>
  </data>
  <data name="IconFileTooLarge" xml:space="preserve">
    <value>Attempting to create a pointer pointed at the best-fitting image resulted in a pointer overflow due to the icon file itself containing too much data.</value>
  </data>
  <data name="HandleCannotChangeDuringMarshalling" xml:space="preserve">
    <value>Changing a SafeHandle's underlying handle value during marshalling is not supported.</value>
  </data>
  <data name="NotifyIconAddModifyFailed" xml:space="preserve">
    <value>Failed to send a message adding or modifying an icon to the taskbar's notification area.</value>
  </data>
  <data name="NotifyIconDeleteFailed" xml:space="preserve">
    <value>Failed to send a message deleting an icon from the taskbar's notification area.</value>
  </data>
  <data name="NotifyIconBalloonFailed" xml:space="preserve">
    <value>Failed to send a message requesting a balloon notification to the taskbar's notification area.</value>
  </data>
  <data name="NotifyIconNoCustomBalloonIconLoaded" xml:space="preserve">
    <value>Cannot send a balloon notification using a custom icon without a custom balloon icon being loaded first.</value>
  </data>
  <data name="NotifyIconBalloonRequiresTaskbar" xml:space="preserve">
    <value>Cannot send a balloon notification until the icon has been added to the taskbar's notification area.</value>
  </data>
  <data name="PopupNotInForeground" xml:space="preserve">
    <value>Unable to set popup as the foreground window. The menu will not disappear if the user clicks outside of it.</value>
  </data>
  <data name="ExecutorFramesRequireRun" xml:space="preserve">
    <value>The executor needs to be running before frames can be pushed to it.</value>
  </data>
  <data name="ActivationContextModuleNotFound" xml:space="preserve">
    <value>A handle to the module containing an embedded manifest resource could not be loaded. If this is a single-file packaged, the resource name for the manifest file must be provided instead.</value>
  </data>
  <data name="ActivationContextManifestResourceNotFound" xml:space="preserve">
    <value>Could not load manifest resource from the Bad Echo Core Framework's assembly.</value>
  </data>
  <data name="JsonNotStartArray" xml:space="preserve">
    <value>The provided JSON text does not begin with the start of a JSON array.</value>
  </data>
  <data name="JsonExtremumValueNotNumber" xml:space="preserve">
    <value>The provided JSON object's extremum property is not a number.</value>
  </data>
  <data name="JsonNodeIsNull" xml:space="preserve">
    <value>Unexpected 'null' literal token encountered in JSON when an object was expected.</value>
  </data>
  <data name="JsonNotNumber" xml:space="preserve">
    <value>The provided JSON text is not a JSON number.</value>
  </data>
  <data name="GlyphNotInFont" xml:space="preserve">
    <value>A glyph for the character '{0}' could not be found, most likely because it was not part of the character set used to generate the font's atlas.</value>
  </data>
  <data name="NativeResolvedLoadFailed" xml:space="preserve">
    <value>Native library resolver failed to load library: {0}</value>
  </data>
  <data name="NoTaskDialogWindowListening" xml:space="preserve">
	  <value>Can't send messages to a task dialog window...without a window. The dialog must be shown before its state can be updated.</value>
  </data>
  <data name="TaskDialogChangeRequiresDetachment" xml:space="preserve">
	  <value>Property cannot be changed while the task dialog is shown.</value>
  </data>
  <data name="TaskDialogChangeRequiresAttachment" xml:space="preserve">
	  <value>Property can only be changed while the task dialog is shown.</value>
  </data>
  <data name="TaskDialogCannotChangeStandardButtonText" xml:space="preserve">
	  <value>Cannot change a standard task dialog button's text.</value>
  </data>
  <data name="TaskDialogNoFlagForCustomButton" xml:space="preserve">
	  <value>Task dialog custom buttons do not have a corresponding standard button flag.</value>
  </data>
  <data name="TaskDialogCannotUncheckRadioButton" xml:space="preserve">
	  <value>Cannot directly uncheck a radio button while task dialog is showing.</value>
  </data>
  <data name="TaskDialogCannotSetCheckedWhileHandlingClick" xml:space="preserve">
	  <value>Cannot change task dialog radio button's checked state while already handling a radio button click event.</value>
  </data>
  <data name="TaskDialogNavigateRequiresAttachment" xml:space="preserve">
	  <value>Can only navigate while the task dialog is shown.</value>
  </data>
  <data name="TaskDialogCannotMixCustomButtonsAndLinks" xml:space="preserve">
	  <value>Task dialog configuration cannot contain a mix of custom push buttons and command links.</value>
  </data>
  <data name="TaskDialogCannotCheckMultipleRadioButtons" xml:space="preserve">
	  <value>Task dialog configuration cannot have more than one radio button checked.</value>
  </data>
  <data name="TaskDialogDefaultButtonNotInCollection" xml:space="preserve">
	  <value>Task dialog configuration has a default button set that wasn't added to its controls collection.</value>
  </data>
  <data name="TaskDialogCannotNavigateWhileHandlingClicked" xml:space="preserve">
	  <value>Cannot navigate a task dialog while handling a radio button clicked notification.</value>
  </data>
  <data name="TaskDialogCannotNavigateWhileClosed" xml:space="preserve">
	  <value>Cannot navigate a task dialog that is closing or has already closed. That's just weird!</value>
  </data>
  <data name="TaskDialogPrematureDetachmentDuringCallback" xml:space="preserve">
	  <value>Cannot process task dialog notification due to premature configuration detachment -- an embarrassing malady.</value>
  </data>
  <data name="TaskDialogUnknownRadioButtonClicked" xml:space="preserve">
	  <value>An unknown task dialog radio button was clicked on. This is very strange, my friend.</value>
  </data>
  <data name="TaskDialogCannotModifyUninitializedProgressBar" xml:space="preserve">
	  <value>Cannot change a task dialog progress bar's properties when it has an uninitialized state.</value>
  </data>
  <data name="TaskDialogProgressBarMaximumOutOfRange" xml:space="preserve">
	  <value>Task dialog progress bar maximum value cannot be negative and must be greater than the minimum value.</value>
  </data>
  <data name="TaskDialogProgressBarMinimumOutOfRange" xml:space="preserve">
	  <value>Task dialog progress bar minimum value cannot be negative and must be less than the maximum value.</value>
  </data>
  <data name="TaskDialogProgressBarInvalidState" xml:space="preserve">
	  <value>Invalid state to set an attached task dialog progress bar to.</value>
  </data>
  <data name="TaskDialogOperationRequiresAttachmentInitialization" xml:space="preserve">
	  <value>Operation can only occur if control is initialized and attached to a visible task dialog.</value>
  </data>
  <data name="TaskDialogCallbackHandleNotSet" xml:space="preserve">
	  <value>Handle to task dialog instance wasn't set as callback data.</value>
  </data>
  <data name="DisplayEnumDisplaySettingsFailed" xml:space="preserve">
	  <value>Failed to retrieve the current graphics mode for {0}.</value>
  </data>
  <data name="DisplayChangePositionFailed" xml:space="preserve">
	  <value>{0} returned when attempting to adjust the monitor's position.</value>
  </data>
  <data name="DisplayChangePrimaryFailed" xml:space="preserve">
	  <value>{0} returned when attempting to set the monitor as the primary display device.</value>
  </data>
  <data name="DisplayApplyDisplaySettingsFailed" xml:space="preserve">
	  <value>{0} returned when attempting to apply staged display settings.</value>
  </data>
</root>