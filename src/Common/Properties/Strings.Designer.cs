//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BadEcho.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BadEcho.Properties.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not load manifest resource from the Bad Echo Core Framework&apos;s assembly..
        /// </summary>
        public static string ActivationContextManifestResourceNotFound {
            get {
                return ResourceManager.GetString("ActivationContextManifestResourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A handle to the module containing an embedded manifest resource could not be loaded. If this is a single-file packaged, the resource name for the manifest file must be provided instead..
        /// </summary>
        public static string ActivationContextModuleNotFound {
            get {
                return ResourceManager.GetString("ActivationContextModuleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve a value from an export that isn&apos;t representing an object..
        /// </summary>
        public static string ArgumentExportValueNoObject {
            get {
                return ResourceManager.GetString("ArgumentExportValueNoObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided string cannot be empty..
        /// </summary>
        public static string ArgumentStringEmpty {
            get {
                return ResourceManager.GetString("ArgumentStringEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid INotifyPropertyChanged implementation; event data is missing property name information..
        /// </summary>
        public static string BadINotifyPropertyChangedImplementation {
            get {
                return ResourceManager.GetString("BadINotifyPropertyChangedImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} returned when attempting to apply staged display settings..
        /// </summary>
        public static string DisplayApplyDisplaySettingsFailed {
            get {
                return ResourceManager.GetString("DisplayApplyDisplaySettingsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} returned when attempting to adjust the monitor&apos;s position..
        /// </summary>
        public static string DisplayChangePositionFailed {
            get {
                return ResourceManager.GetString("DisplayChangePositionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} returned when attempting to set the monitor as the primary display device..
        /// </summary>
        public static string DisplayChangePrimaryFailed {
            get {
                return ResourceManager.GetString("DisplayChangePrimaryFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EnumDisplayMonitors failed unexpectedly..
        /// </summary>
        public static string DisplayEnumDisplayMonitorsFailed {
            get {
                return ResourceManager.GetString("DisplayEnumDisplayMonitorsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve the current graphics mode for {0}..
        /// </summary>
        public static string DisplayEnumDisplaySettingsFailed {
            get {
                return ResourceManager.GetString("DisplayEnumDisplaySettingsFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HRESULT of {0} returned when attempting to query for a monitor&apos;s DPI. Because of this, display device will default to using the system-wide DPI..
        /// </summary>
        public static string DisplayGetDpiForMonitorFailed {
            get {
                return ResourceManager.GetString("DisplayGetDpiForMonitorFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HRESULT of {0} returned when attempting to query for a monitor&apos;s scale factor. Because of this, display device will default to using a default scale factor of 100 percent..
        /// </summary>
        public static string DisplayGetScaleFactorForMonitorFailed {
            get {
                return ResourceManager.GetString("DisplayGetScaleFactorForMonitorFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration has already finished; no more objects exist in the sequence..
        /// </summary>
        public static string EnumerationAtEnd {
            get {
                return ResourceManager.GetString("EnumerationAtEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration has not started. A call to MoveNext() must occur at least once prior to reading the Current object..
        /// </summary>
        public static string EnumerationNotStarted {
            get {
                return ResourceManager.GetString("EnumerationNotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The enumeration type&apos;s underlying integral numeric type is not an integer..
        /// </summary>
        public static string EnumIntegralTypeNotInteger {
            get {
                return ResourceManager.GetString("EnumIntegralTypeNotInteger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The executor is already running on a thread..
        /// </summary>
        public static string ExecutorAlreadyRunning {
            get {
                return ResourceManager.GetString("ExecutorAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An executor can only be disabled on the thread which the executor was created on..
        /// </summary>
        public static string ExecutorCannotDisableOnOtherThread {
            get {
                return ResourceManager.GetString("ExecutorCannotDisableOnOtherThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An executor can only be re-enabled on the thread which the executor was created on..
        /// </summary>
        public static string ExecutorCannotEnableOnOtherThread {
            get {
                return ResourceManager.GetString("ExecutorCannotEnableOnOtherThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executor operation must either be complete or canceled prior to finalizing completion..
        /// </summary>
        public static string ExecutorFinalizedBeforeDone {
            get {
                return ResourceManager.GetString("ExecutorFinalizedBeforeDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The executor needs to be running before frames can be pushed to it..
        /// </summary>
        public static string ExecutorFramesRequireRun {
            get {
                return ResourceManager.GetString("ExecutorFramesRequireRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executor is disposed and cannot be run again..
        /// </summary>
        public static string ExecutorIsDisposed {
            get {
                return ResourceManager.GetString("ExecutorIsDisposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The executor&apos;s ability to process operations is currently disabled..
        /// </summary>
        public static string ExecutorProcessingDisabled {
            get {
                return ResourceManager.GetString("ExecutorProcessingDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The executor has been shutdown and cannot execute any further operations..
        /// </summary>
        public static string ExecutorShutdown {
            get {
                return ResourceManager.GetString("ExecutorShutdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executor may not wait on an operation executing on the same thread..
        /// </summary>
        public static string ExecutorWaitOperationSameThread {
            get {
                return ResourceManager.GetString("ExecutorWaitOperationSameThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A glyph for the character &apos;{0}&apos; could not be found, most likely because it was not part of the character set used to generate the font&apos;s atlas..
        /// </summary>
        public static string GlyphNotInFont {
            get {
                return ResourceManager.GetString("GlyphNotInFont", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing a SafeHandle&apos;s underlying handle value during marshalling is not supported..
        /// </summary>
        public static string HandleCannotChangeDuringMarshalling {
            get {
                return ResourceManager.GetString("HandleCannotChangeDuringMarshalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attempting to create a pointer pointed at the best-fitting image resulted in a pointer overflow due to the icon file itself containing too much data..
        /// </summary>
        public static string IconFileTooLarge {
            get {
                return ResourceManager.GetString("IconFileTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best-fitting image&apos;s specified amount of data exceeds the total length of the icon file..
        /// </summary>
        public static string IconImageExceedsFile {
            get {
                return ResourceManager.GetString("IconImageExceedsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Calculating the ending offset for the best-fitting image described by the icon file resulted in an overflow..
        /// </summary>
        public static string IconImageOffsetOverflow {
            get {
                return ResourceManager.GetString("IconImageOffsetOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The best-fitting image described by the icon file is too large for realignment and loading..
        /// </summary>
        public static string IconImageTooLarge {
            get {
                return ResourceManager.GetString("IconImageTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The icon file has no image entries..
        /// </summary>
        public static string IconNoEntries {
            get {
                return ResourceManager.GetString("IconNoEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of the icon file isn&apos;t large enough to describe the number of images it says it contains..
        /// </summary>
        public static string IconTooSmallForEntries {
            get {
                return ResourceManager.GetString("IconTooSmallForEntries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided JSON object&apos;s data property is not a JSON object..
        /// </summary>
        public static string JsonDataValueNotObject {
            get {
                return ResourceManager.GetString("JsonDataValueNotObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided JSON object&apos;s extremum property is not a number..
        /// </summary>
        public static string JsonExtremumValueNotNumber {
            get {
                return ResourceManager.GetString("JsonExtremumValueNotNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; property found on the provided JSON object is not the expected type descriptor property &apos;{1}&apos;..
        /// </summary>
        public static string JsonInvalidTypeName {
            get {
                return ResourceManager.GetString("JsonInvalidTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided JSON text is malformed. A collection of one or more key-value pairs is expected for an object..
        /// </summary>
        public static string JsonMalformedText {
            get {
                return ResourceManager.GetString("JsonMalformedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected &apos;null&apos; literal token encountered in JSON when an object was expected..
        /// </summary>
        public static string JsonNodeIsNull {
            get {
                return ResourceManager.GetString("JsonNodeIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided JSON text is not a JSON number..
        /// </summary>
        public static string JsonNotNumber {
            get {
                return ResourceManager.GetString("JsonNotNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided JSON text does not begin with the start of a JSON array..
        /// </summary>
        public static string JsonNotStartArray {
            get {
                return ResourceManager.GetString("JsonNotStartArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided JSON text does not begin with the start of a JSON object..
        /// </summary>
        public static string JsonNotStartObject {
            get {
                return ResourceManager.GetString("JsonNotStartObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided JSON object&apos;s type descriptor property is not a number..
        /// </summary>
        public static string JsonTypeValueNotNumber {
            get {
                return ResourceManager.GetString("JsonTypeValueNotNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing exception payload..
        /// </summary>
        public static string LoggingMissingException {
            get {
                return ResourceManager.GetString("LoggingMissingException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing message payload..
        /// </summary>
        public static string LoggingMissingMessage {
            get {
                return ResourceManager.GetString("LoggingMissingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Native library resolver failed to load library: {0}.
        /// </summary>
        public static string NativeResolvedLoadFailed {
            get {
                return ResourceManager.GetString("NativeResolvedLoadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No comparable exception class can be mapped to the provided HRESULT as it does not represent a failed operation..
        /// </summary>
        public static string NoExceptionFromSuccessfulResult {
            get {
                return ResourceManager.GetString("NoExceptionFromSuccessfulResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t send messages to a task dialog window...without a window. The dialog must be shown before its state can be updated..
        /// </summary>
        public static string NoTaskDialogWindowListening {
            get {
                return ResourceManager.GetString("NoTaskDialogWindowListening", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to send a message adding or modifying an icon to the taskbar&apos;s notification area..
        /// </summary>
        public static string NotifyIconAddModifyFailed {
            get {
                return ResourceManager.GetString("NotifyIconAddModifyFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to send a message requesting a balloon notification to the taskbar&apos;s notification area..
        /// </summary>
        public static string NotifyIconBalloonFailed {
            get {
                return ResourceManager.GetString("NotifyIconBalloonFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot send a balloon notification until the icon has been added to the taskbar&apos;s notification area..
        /// </summary>
        public static string NotifyIconBalloonRequiresTaskbar {
            get {
                return ResourceManager.GetString("NotifyIconBalloonRequiresTaskbar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to send a message deleting an icon from the taskbar&apos;s notification area..
        /// </summary>
        public static string NotifyIconDeleteFailed {
            get {
                return ResourceManager.GetString("NotifyIconDeleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot send a balloon notification using a custom icon without a custom balloon icon being loaded first..
        /// </summary>
        public static string NotifyIconNoCustomBalloonIconLoaded {
            get {
                return ResourceManager.GetString("NotifyIconNoCustomBalloonIconLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to set popup as the foreground window. The menu will not disappear if the user clicks outside of it..
        /// </summary>
        public static string PopupNotInForeground {
            get {
                return ResourceManager.GetString("PopupNotInForeground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subclass message processing procedure invoked while in a detached state..
        /// </summary>
        public static string SubclassDetachedWndProc {
            get {
                return ResourceManager.GetString("SubclassDetachedWndProc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to detach a subclassed window&apos;s WndProc from the window&apos;s message chain..
        /// </summary>
        public static string SubclassDetachmentFailed {
            get {
                return ResourceManager.GetString("SubclassDetachmentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to forcibly detach a subclassed window&apos;s WndProc from the window&apos;s message chain..
        /// </summary>
        public static string SubclassForcibleDetachmentFailed {
            get {
                return ResourceManager.GetString("SubclassForcibleDetachmentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handle to task dialog instance wasn&apos;t set as callback data..
        /// </summary>
        public static string TaskDialogCallbackHandleNotSet {
            get {
                return ResourceManager.GetString("TaskDialogCallbackHandleNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change a standard task dialog button&apos;s text..
        /// </summary>
        public static string TaskDialogCannotChangeStandardButtonText {
            get {
                return ResourceManager.GetString("TaskDialogCannotChangeStandardButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task dialog configuration cannot have more than one radio button checked..
        /// </summary>
        public static string TaskDialogCannotCheckMultipleRadioButtons {
            get {
                return ResourceManager.GetString("TaskDialogCannotCheckMultipleRadioButtons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task dialog configuration cannot contain a mix of custom push buttons and command links..
        /// </summary>
        public static string TaskDialogCannotMixCustomButtonsAndLinks {
            get {
                return ResourceManager.GetString("TaskDialogCannotMixCustomButtonsAndLinks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change a task dialog progress bar&apos;s properties when it has an uninitialized state..
        /// </summary>
        public static string TaskDialogCannotModifyUninitializedProgressBar {
            get {
                return ResourceManager.GetString("TaskDialogCannotModifyUninitializedProgressBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot navigate a task dialog that is closing or has already closed. That&apos;s just weird!.
        /// </summary>
        public static string TaskDialogCannotNavigateWhileClosed {
            get {
                return ResourceManager.GetString("TaskDialogCannotNavigateWhileClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot navigate a task dialog while handling a radio button clicked notification..
        /// </summary>
        public static string TaskDialogCannotNavigateWhileHandlingClicked {
            get {
                return ResourceManager.GetString("TaskDialogCannotNavigateWhileHandlingClicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change task dialog radio button&apos;s checked state while already handling a radio button click event..
        /// </summary>
        public static string TaskDialogCannotSetCheckedWhileHandlingClick {
            get {
                return ResourceManager.GetString("TaskDialogCannotSetCheckedWhileHandlingClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot directly uncheck a radio button while task dialog is showing..
        /// </summary>
        public static string TaskDialogCannotUncheckRadioButton {
            get {
                return ResourceManager.GetString("TaskDialogCannotUncheckRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property can only be changed while the task dialog is shown..
        /// </summary>
        public static string TaskDialogChangeRequiresAttachment {
            get {
                return ResourceManager.GetString("TaskDialogChangeRequiresAttachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property cannot be changed while the task dialog is shown..
        /// </summary>
        public static string TaskDialogChangeRequiresDetachment {
            get {
                return ResourceManager.GetString("TaskDialogChangeRequiresDetachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task dialog configuration has a default button set that wasn&apos;t added to its controls collection..
        /// </summary>
        public static string TaskDialogDefaultButtonNotInCollection {
            get {
                return ResourceManager.GetString("TaskDialogDefaultButtonNotInCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only navigate while the task dialog is shown..
        /// </summary>
        public static string TaskDialogNavigateRequiresAttachment {
            get {
                return ResourceManager.GetString("TaskDialogNavigateRequiresAttachment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task dialog custom buttons do not have a corresponding standard button flag..
        /// </summary>
        public static string TaskDialogNoFlagForCustomButton {
            get {
                return ResourceManager.GetString("TaskDialogNoFlagForCustomButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation can only occur if control is initialized and attached to a visible task dialog..
        /// </summary>
        public static string TaskDialogOperationRequiresAttachmentInitialization {
            get {
                return ResourceManager.GetString("TaskDialogOperationRequiresAttachmentInitialization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot process task dialog notification due to premature configuration detachment -- an embarrassing malady..
        /// </summary>
        public static string TaskDialogPrematureDetachmentDuringCallback {
            get {
                return ResourceManager.GetString("TaskDialogPrematureDetachmentDuringCallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid state to set an attached task dialog progress bar to..
        /// </summary>
        public static string TaskDialogProgressBarInvalidState {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarInvalidState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task dialog progress bar maximum value cannot be negative and must be greater than the minimum value..
        /// </summary>
        public static string TaskDialogProgressBarMaximumOutOfRange {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarMaximumOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Task dialog progress bar minimum value cannot be negative and must be less than the maximum value..
        /// </summary>
        public static string TaskDialogProgressBarMinimumOutOfRange {
            get {
                return ResourceManager.GetString("TaskDialogProgressBarMinimumOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown task dialog radio button was clicked on. This is very strange, my friend..
        /// </summary>
        public static string TaskDialogUnknownRadioButtonClicked {
            get {
                return ResourceManager.GetString("TaskDialogUnknownRadioButtonClicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot load an operation into an already initialized ThreadExecutorOperationTaskSource..
        /// </summary>
        public static string ThreadExecutorSourceAlreadyInitialized {
            get {
                return ResourceManager.GetString("ThreadExecutorSourceAlreadyInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ThreadExecutorOperationTaskSource has not been initialized..
        /// </summary>
        public static string ThreadExecutorSourceNotInitialized {
            get {
                return ResourceManager.GetString("ThreadExecutorSourceNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weak list enumerator requires a strong reference to enumerate..
        /// </summary>
        public static string WeakListEnumeratorNoReference {
            get {
                return ResourceManager.GetString("WeakListEnumeratorNoReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A hot key has already been registered with the identifier &apos;{0}&apos;..
        /// </summary>
        public static string WindowHotKeyDuplicateId {
            get {
                return ResourceManager.GetString("WindowHotKeyDuplicateId", resourceCulture);
            }
        }
    }
}
